<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>買い物リスト</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</head>

<body>
    <div class="p-0 container">
        <div class="p-1" data-ui-name="header" style="background-color: #d8ffd8;">
            <p class="m-0 fw-bold text-center">リスト</p>
        </div>
        <div data-ui-name="body">
        </div>
        <!--
        <div id="itemListContainer" class="container-fluid">
            <div class="d-flex flex-row align-items-center">
                <button type="button" class="btn"
                    style="--bs-btn-padding-x: .2rem; margin-right: 0.5rem; display: none;">
                    <i class="fs-2 bi bi-dash-circle-fill text-danger"></i>
                </button>
                <button type="button" class="btn" style="--bs-btn-padding-x: .2rem;">
                    <i class="fs-2 bi bi-check-square-fill text-success"></i>
                </button>
                <input type="text" class="form-control border-0" placeholder="食材" style="margin-right: 6px;">
                <div class="input-group" style="min-width: 8rem; max-width: 8rem;">
                    <input type="number" class="form-control border-0" placeholder="数" inputmode="numeric"
                        style="min-width: 3.9rem; max-width: 3.9rem; text-align: right">
                    <select class="form-select border-0 text-white bg-secondary" aria-label="unit"
                        style="min-width: 4.1rem; max-width: 4.1rem;">
                        <option value="個" selected>個</option>
                        <option value="g">g</option>
                    </select>
                </div>
                <button type="button" class="btn"
                    style="--bs-btn-padding-x: .2rem; margin-left: 0.5rem; display: none;">
                    <i class="fs-2 bi bi-list text-secondary"></i>
                </button>
            </div>
            <div class="d-flex flex-row align-items-center">
                <button type="button" class="btn" style="--bs-btn-padding-x: .2rem; margin-right: 0.5rem;">
                    <i class="fs-2 bi bi-dash-circle-fill text-danger"></i>
                </button>
                <button type="button" class="btn" style="--bs-btn-padding-x: .2rem;">
                    <i class="fs-2 bi bi-square"></i>
                </button>
                <input type="text" class="form-control border-0" placeholder="食材" style="margin-right: 6px;">
                <div class="input-group" style="min-width: 8rem; max-width: 8rem;">
                    <input type="number" class="form-control border-0" placeholder="数" inputmode="numeric"
                        style="min-width: 3.9rem; max-width: 3.9rem; text-align: right">
                    <select class="form-select border-0 text-white bg-secondary" aria-label="unit"
                        style="min-width: 4.1rem; max-width: 4.1rem;">
                        <option value="個" selected>個</option>
                        <option value="g">g</option>
                    </select>
                </div>
                <button type="button" class="btn" style="--bs-btn-padding-x: .2rem; margin-left: 0.5rem;">
                    <i class="fs-2 bi bi-list text-secondary"></i>
                </button>
            </div>
        </div>
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <button type="button" id="addItemButton" class="btn" style="--bs-btn-padding-x: .2rem;">
                        <i class="fs-2 bi bi-plus-circle"></i>
                    </button>
                </div>
                <div class="col text-end">
                    <button type="button" id="clearItemButton" class="btn" style="--bs-btn-padding-x: .2rem;">
                        <i class="fs-2 bi bi-trash3 text-danger"></i>
                    </button>
                    <button type="button" id="editItemButton" class="btn" data-bs-toggle="button" style="--bs-btn-padding-x: .2rem;">
                        <i class="fs-2 bi bi-pencil-square"></i>
                    </button>
                </div>
            </div>
        </div>
        -->
    </div>
    <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        class IconButton {
            static create(iconParameters) {
                return $('<button>')
                    .addClass('btn')
                    .attr({ type: 'button' })
                    .css({ '--bs-btn-padding-x': '.2rem', '--bs-btn-border-width': '0px' })
                    .append($('<i>').addClass(`fs-2 bi ${iconParameters}`));
            }

            static icon($iconButton) {
                return $iconButton.children();
            }
        }
        class IconToggleButton {
            static create(iconParameters) {
                return IconButton.create(iconParameters)
                    .attr({ 'data-toggle-state': 'off' })
            }

            static icon($iconButton) {
                return IconButton.icon($iconButton);
            }

            static toggle($iconButton) {
                $iconButton.attr({ 'data-toggle-state': $iconButton.attr('data-toggle-state') == 'on' ? 'off' : 'on' });
                return $iconButton.attr('data-toggle-state') == 'on';
            }
        }
        class ShoppingItemView {
            constructor() {
                self = this
                this.root = $('<div>')
                    .addClass('d-flex flex-row align-items-center')
                    .attr({ 'data-ui-name': 'itemPane' })
                    .append(
                        IconButton.create('bi-dash-circle-fill text-danger')
                            .css({ marginRight: '0.5rem', display: 'none' })
                            .click(function () {
                                $(this).parent().remove();
                            }),
                        IconButton.create('bi-square'),
                        $('<input>')
                            .addClass('form-control border-0')
                            .attr({ type: 'text', placeholder: '品名' })
                            .css({ marginRight: '6px' }), // prevent the border that appears when making a selection from being missing.
                        $('<div>')
                            .addClass('input-group')
                            .css({ minWidth: '8rem', maxWidth: '8rem' })
                            .append(
                                $('<input>')
                                    .addClass('form-control border-0')
                                    .attr({ type: 'number', placeholder: '量', inputmode: 'numeric' })
                                    .css({ minWidth: '3.9rem', maxWidth: '3.9rem', textAlign: 'right' }),
                                $('<select>')
                                    .addClass('form-select border-0 text-white bg-secondary')
                                    .css({ minWidth: '4.1rem', maxWidth: '4.1rem' })
                                    .append(
                                        $('<option>')
                                            .attr({ value: '個', selected: true })
                                            .text('個'),
                                        $('<option>')
                                            .attr({ value: 'g' })
                                            .text('g'),
                                    )),
                        IconButton.create('bi-list text-secondary')
                            .css({ marginLeft: '0.5rem', display: 'none' }));
            }
        }
        class ShoppingListView {
            constructor() {
                const self = this;
                this.addButton = IconButton.create('bi-plus-circle')
                    .click(function () {
                        self.items.append(self.createItem());
                    });
                this.editButton = IconToggleButton.create('bi-pencil-square')
                    .click(function () {
                        const toggleState = IconToggleButton.toggle($(this));

                        const iconParameters = ['bi-pencil-square', 'bi-check-lg text-success'];
                        const $icon = IconToggleButton.icon($(this));
                        $icon.addClass(iconParameters[Number(toggleState)]);
                        $icon.removeClass(iconParameters[Number(!toggleState)]);

                        self.addButton.css({ display: toggleState ? 'none' : '' });
                        self.clearButton.css({ display: toggleState ? '' : 'none' });
                        self.items.find('button, input, select').attr({ disabled: toggleState });
                        self.items.children().children(':first-child, :last-child')
                            .attr({ disabled: false })
                            .css({ display: toggleState ? '' : 'none' });
                    });
                this.clearButton = IconButton.create('bi-trash3 text-danger')
                    .css({ display: 'none' })
                    .click(function () {
                        const ret = window.confirm('リスト内の項目をすべて削除しますか？');
                        if (!ret) return;

                        self.items.children().remove();
                        if (self.editButton.attr('data-toggle-state') == 'on') {
                            self.editButton.click();
                        }
                    });
                this.root = $('<div>')
                    .addClass('container-fluid')
                    .append(
                        $('<div>')
                            .addClass('container-fluid'),
                        $('<div>')
                            .addClass('container-fluid')
                            .append(
                                $('<div>')
                                    .addClass('row')
                                    .append(
                                        $('<div>')
                                            .addClass('col')
                                            .append(this.addButton, this.clearButton),
                                        $('<div>')
                                            .addClass('col text-end')
                                            .append(this.editButton))));

            }

            get items() {
                return this.root.children(':first-child')
            }

            createItem() {
                return (new ShoppingItemView).root
            }
        }
        $(function () {
            $('[data-ui-name="body"]').append((new ShoppingListView()).root);
        })
    </script>
</body>

</html>
